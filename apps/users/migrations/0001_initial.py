# Generated by Django 3.0.2 on 2021-02-20 01:08

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=100, unique=True, verbose_name='Username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombres del usuario')),
                ('apellidos', models.CharField(max_length=100, verbose_name='apellidos del usuario')),
                ('imagen', models.ImageField(blank=True, max_length=255, null=True, upload_to='perfil/', verbose_name='Imagen de Perfil')),
                ('pregunta', models.CharField(choices=[('Ciudad de nacimiento de tu madre?', 'Ciudad de nacimiento de tu madre?'), ('Profesión de tu abuelo?', 'Profesión de tu abuelo?'), ('Marca de coches favorita?', 'Marca de coches favorita?'), ('Nombre de tu mejor amigo?', 'Nombre de tu mejor amigo?'), ('Ciudad de nacimiento de tu padre?', 'Ciudad de nacimiento de tu padre?')], max_length=255, null=True, verbose_name='Pregunta de seguridad')),
                ('respuesta', models.CharField(max_length=255, null=True, verbose_name='Respuesta de seguridad')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
